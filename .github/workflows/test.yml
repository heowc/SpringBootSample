name: Test
on:
  push:
  pull_request:
    types: [opened, reopened]
jobs:
  test:
    runs-on: ubuntu-18.04
    services:
      dynamodb:
        image: amazon/dynamodb-local:1.11.477
        ports:
          - 8000:8000
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v1
        name: Load cached Gradle Wrapper
        with:
          path: ~/.gradle/wrapper/dists/
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - uses: actions/cache@v1
        name: Load cached dependency
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
      - name: Check Gradle Version
        run: |
          chmod +x gradlew
          ./gradlew --version
      - name: Test task with Gradle Wrapper
        run: |
          ./gradlew --parallel --max-workers=2 test
      - name: If failure then upload test reports
        if: failure()
        run: |
          # copy [armeria/.appveyor.report.sh](https://github.com/line/armeria/blob/5f01ce1e4d1a34ba5a26221675d7c1e33506461e/.appveyor.report.sh)
          TARBALL_BASENAME="SpringBootSample-reports"
          TARBALL="$TARBALL_BASENAME.tar"

          echo 'Collecting the test reports ..'
          find . -path '*/build/reports/tests' -type d \
            -exec tar rf "$TARBALL" \
              --xform="s:./:$TARBALL_BASENAME/:" \
              --xform='s:/build/reports/tests::' \
              {} ';'

          echo 'Compressing the test reports ..'
          gzip "$TARBALL"

          echo 'Uploading the test reports ..'
          curl -F "file=@$TARBALL.gz" 'https://file.io/'
          echo
          echo 'Download the test reports from the URL above.'
