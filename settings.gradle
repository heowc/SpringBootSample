pluginManagement {
    plugins {
        id 'io.spring.dependency-management' version "1.1.1"
        id 'org.springframework.boot' version "3.1.1"
        ['jvm', 'plugin.spring', 'plugin.jpa'].forEach(postfix -> {
            id "org.jetbrains.kotlin.${postfix}" version "1.8.0"
        })
    }
}

rootProject.name = 'spring-boot-sample'

include 'SpringBootAOP'
findProject(':SpringBootAOP')?.name = 'spring-boot-aop'

include 'SpringBootAsync'
findProject(':SpringBootAsync')?.name = 'spring-boot-async'

include 'SpringBootBatch'
findProject(':SpringBootBatch')?.name = 'spring-boot-batch'

include 'SpringBootCache'
findProject(':SpringBootCache')?.name = 'spring-boot-cache'

include 'SpringBootConfigurable'
findProject(':SpringBootConfigurable')?.name = 'spring-boot-configurable'

include 'SpringBootCors'
findProject(':SpringBootCors')?.name = 'spring-boot-cors'

include 'SpringBootCustomJackson'
findProject(':SpringBootCustomJackson')?.name = 'spring-boot-custom-jackson'

include 'SpringBootDocker'
findProject(':SpringBootDocker')?.name = 'spring-boot-docker'

include 'SpringBootDynamo'
findProject(':SpringBootDynamo')?.name = 'spring-boot-dynamo'

include 'SpringBootEvent'
findProject(':SpringBootEvent')?.name = 'spring-boot-event'

include 'SpringBootExcel'
findProject(':SpringBootExcel')?.name = 'spring-boot-excel'

include 'SpringBootException'
findProject(':SpringBootException')?.name = 'spring-boot-exception'

include 'SpringBootGracefulShutdown'
findProject(':SpringBootGracefulShutdown')?.name = 'spring-boot-graceful-shutdown'

include 'SpringBootGRpc'
findProject(':SpringBootGRpc')?.name = 'spring-boot-grpc'

include 'SpringBootHateoas'
findProject(':SpringBootHateoas')?.name = 'spring-boot-hateoas'

include 'SpringBootInterceptor'
findProject(':SpringBootInterceptor')?.name = 'spring-boot-interceptor'

include 'SpringBootJpa'
findProject(':SpringBootJpa')?.name = 'spring-boot-jpa'

include 'SpringBootJpaSecurity'
findProject(':SpringBootJpaSecurity')?.name = 'spring-boot-jpa-security'

include 'SpringBootLogStash'
findProject(':SpringBootLogStash')?.name = 'spring-boot-logstash'

include 'SpringBootMicroMeter'
findProject(':SpringBootMicroMeter')?.name = 'spring-boot-micrometer'

include 'SpringBootMybatis'
findProject(':SpringBootMybatis')?.name = 'spring-boot-mybatis'

include 'SpringBootNotice'
findProject(':SpringBootNotice')?.name = 'spring-boot-notice'

//include 'SpringBootOAuth2'
//findProject(':SpringBootOAuth2')?.name = 'spring-boot-oauth2'

include 'SpringBootQueryDsl'
findProject(':SpringBootQueryDsl')?.name = 'spring-boot-querydsl'

include 'SpringBootRabbitMQ'
findProject(':SpringBootRabbitMQ')?.name = 'spring-boot-rabbitmq'

include 'SpringBootRedis'
findProject(':SpringBootRedis')?.name = 'spring-boot-redis'

include 'SpringBootRest'
findProject(':SpringBootRest')?.name = 'spring-boot-rest'

include 'SpringBootRestDocs'
findProject(':SpringBootRestDocs')?.name = 'spring-boot-restdocs'

include 'SpringBootSecurityAddRedis'
findProject(':SpringBootSecurityAddRedis')?.name = 'spring-boot-security-redis'

include 'SpringBootSecurityJwt'
findProject(':SpringBootSecurityJwt')?.name = 'spring-boot-security-jwt'

include 'SpringBootSpringDocOpenApi'
findProject(':SpringBootSpringDocOpenApi')?.name = 'spring-boot-springdoc-openapi'

include 'SpringBootStatemachine'
findProject(':SpringBootStatemachine')?.name = 'spring-boot-statemachine'

include 'SpringBootTest'
findProject(':SpringBootTest')?.name = 'spring-boot-test'

include 'SpringBootValidator'
findProject(':SpringBootValidator')?.name = 'spring-boot-validator'

include 'SpringBootVertx'
findProject(':SpringBootVertx')?.name = 'spring-boot-vertx'

include 'SpringBootWar'
findProject(':SpringBootWar')?.name = 'spring-boot-war'

include 'SpringBootWebFlux'
findProject(':SpringBootWebFlux')?.name = 'spring-boot-webflux'

include 'SpringBootWebSocket'
findProject(':SpringBootWebSocket')?.name = 'spring-boot-websocket'

